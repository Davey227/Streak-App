{"ast":null,"code":"import{clsx}from\"clsx\";import{twMerge}from\"tailwind-merge\";export function cn(){for(var _len=arguments.length,inputs=new Array(_len),_key=0;_key<_len;_key++){inputs[_key]=arguments[_key];}return twMerge(clsx(inputs));}export function formatDate(date){return new Intl.DateTimeFormat('en-US',{month:'short',day:'numeric',year:'numeric'}).format(new Date(date));}export function isToday(date){const today=new Date();const checkDate=new Date(date);return today.toDateString()===checkDate.toDateString();}export function calculateStreak(completions){if(!completions||completions.length===0)return 0;const sortedDates=completions.map(c=>new Date(c.date)).sort((a,b)=>b-a);let streak=0;const today=new Date();today.setHours(0,0,0,0);for(let i=0;i<sortedDates.length;i++){const date=new Date(sortedDates[i]);date.setHours(0,0,0,0);const expectedDate=new Date(today);expectedDate.setDate(today.getDate()-streak);if(date.getTime()===expectedDate.getTime()){streak++;}else{break;}}return streak;}","map":{"version":3,"names":["clsx","twMerge","cn","_len","arguments","length","inputs","Array","_key","formatDate","date","Intl","DateTimeFormat","month","day","year","format","Date","isToday","today","checkDate","toDateString","calculateStreak","completions","sortedDates","map","c","sort","a","b","streak","setHours","i","expectedDate","setDate","getDate","getTime"],"sources":["/app/streaksnap-clean/src/lib/utils.js"],"sourcesContent":["import { clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n\nexport function formatDate(date) {\n  return new Intl.DateTimeFormat('en-US', {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric'\n  }).format(new Date(date));\n}\n\nexport function isToday(date) {\n  const today = new Date();\n  const checkDate = new Date(date);\n  return today.toDateString() === checkDate.toDateString();\n}\n\nexport function calculateStreak(completions) {\n  if (!completions || completions.length === 0) return 0;\n  \n  const sortedDates = completions\n    .map(c => new Date(c.date))\n    .sort((a, b) => b - a);\n  \n  let streak = 0;\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  \n  for (let i = 0; i < sortedDates.length; i++) {\n    const date = new Date(sortedDates[i]);\n    date.setHours(0, 0, 0, 0);\n    \n    const expectedDate = new Date(today);\n    expectedDate.setDate(today.getDate() - streak);\n    \n    if (date.getTime() === expectedDate.getTime()) {\n      streak++;\n    } else {\n      break;\n    }\n  }\n  \n  return streak;\n}"],"mappings":"AAAA,OAASA,IAAI,KAAQ,MAAM,CAC3B,OAASC,OAAO,KAAQ,gBAAgB,CAExC,MAAO,SAAS,CAAAC,EAAEA,CAAA,CAAY,SAAAC,IAAA,CAAAC,SAAA,CAAAC,MAAA,CAARC,MAAM,KAAAC,KAAA,CAAAJ,IAAA,EAAAK,IAAA,GAAAA,IAAA,CAAAL,IAAA,CAAAK,IAAA,IAANF,MAAM,CAAAE,IAAA,EAAAJ,SAAA,CAAAI,IAAA,GAC1B,MAAO,CAAAP,OAAO,CAACD,IAAI,CAACM,MAAM,CAAC,CAAC,CAC9B,CAEA,MAAO,SAAS,CAAAG,UAAUA,CAACC,IAAI,CAAE,CAC/B,MAAO,IAAI,CAAAC,IAAI,CAACC,cAAc,CAAC,OAAO,CAAE,CACtCC,KAAK,CAAE,OAAO,CACdC,GAAG,CAAE,SAAS,CACdC,IAAI,CAAE,SACR,CAAC,CAAC,CAACC,MAAM,CAAC,GAAI,CAAAC,IAAI,CAACP,IAAI,CAAC,CAAC,CAC3B,CAEA,MAAO,SAAS,CAAAQ,OAAOA,CAACR,IAAI,CAAE,CAC5B,KAAM,CAAAS,KAAK,CAAG,GAAI,CAAAF,IAAI,CAAC,CAAC,CACxB,KAAM,CAAAG,SAAS,CAAG,GAAI,CAAAH,IAAI,CAACP,IAAI,CAAC,CAChC,MAAO,CAAAS,KAAK,CAACE,YAAY,CAAC,CAAC,GAAKD,SAAS,CAACC,YAAY,CAAC,CAAC,CAC1D,CAEA,MAAO,SAAS,CAAAC,eAAeA,CAACC,WAAW,CAAE,CAC3C,GAAI,CAACA,WAAW,EAAIA,WAAW,CAAClB,MAAM,GAAK,CAAC,CAAE,MAAO,EAAC,CAEtD,KAAM,CAAAmB,WAAW,CAAGD,WAAW,CAC5BE,GAAG,CAACC,CAAC,EAAI,GAAI,CAAAT,IAAI,CAACS,CAAC,CAAChB,IAAI,CAAC,CAAC,CAC1BiB,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKA,CAAC,CAAGD,CAAC,CAAC,CAExB,GAAI,CAAAE,MAAM,CAAG,CAAC,CACd,KAAM,CAAAX,KAAK,CAAG,GAAI,CAAAF,IAAI,CAAC,CAAC,CACxBE,KAAK,CAACY,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAE1B,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGR,WAAW,CAACnB,MAAM,CAAE2B,CAAC,EAAE,CAAE,CAC3C,KAAM,CAAAtB,IAAI,CAAG,GAAI,CAAAO,IAAI,CAACO,WAAW,CAACQ,CAAC,CAAC,CAAC,CACrCtB,IAAI,CAACqB,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAEzB,KAAM,CAAAE,YAAY,CAAG,GAAI,CAAAhB,IAAI,CAACE,KAAK,CAAC,CACpCc,YAAY,CAACC,OAAO,CAACf,KAAK,CAACgB,OAAO,CAAC,CAAC,CAAGL,MAAM,CAAC,CAE9C,GAAIpB,IAAI,CAAC0B,OAAO,CAAC,CAAC,GAAKH,YAAY,CAACG,OAAO,CAAC,CAAC,CAAE,CAC7CN,MAAM,EAAE,CACV,CAAC,IAAM,CACL,MACF,CACF,CAEA,MAAO,CAAAA,MAAM,CACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}