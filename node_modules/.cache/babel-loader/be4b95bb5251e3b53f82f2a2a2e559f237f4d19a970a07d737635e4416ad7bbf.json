{"ast":null,"code":"// Mock data for offline functionality\n// In a real app, this would connect to your backend API\nconst STORAGE_KEY='streaksnap_habits';// Load habits from localStorage\nconst loadHabits=()=>{try{const stored=localStorage.getItem(STORAGE_KEY);return stored?JSON.parse(stored):[];}catch(error){console.error('Failed to load habits:',error);return[];}};// Save habits to localStorage\nconst saveHabits=habits=>{try{localStorage.setItem(STORAGE_KEY,JSON.stringify(habits));}catch(error){console.error('Failed to save habits:',error);}};// Generate unique ID\nconst generateId=()=>{return Date.now().toString(36)+Math.random().toString(36).substr(2);};export const api={// Get all habits\ngetHabits:async()=>{return new Promise(resolve=>{setTimeout(()=>{const habits=loadHabits();resolve({habits});},100);});},// Create a new habit\ncreateHabit:async habitData=>{return new Promise(resolve=>{setTimeout(()=>{const habits=loadHabits();const newHabit={id:generateId(),...habitData,completions:[],createdAt:new Date().toISOString()};habits.push(newHabit);saveHabits(habits);resolve(newHabit);},100);});},// Complete a habit\ncompleteHabit:async habitId=>{return new Promise((resolve,reject)=>{setTimeout(()=>{const habits=loadHabits();const habit=habits.find(h=>h.id===habitId);if(!habit){reject(new Error('Habit not found'));return;}const today=new Date().toISOString().split('T')[0];const existingCompletion=habit.completions.find(c=>c.date===today);if(!existingCompletion){habit.completions.push({date:today,completed:true,completedAt:new Date().toISOString()});saveHabits(habits);}resolve(habit);},100);});},// Get habit by ID\ngetHabit:async habitId=>{return new Promise((resolve,reject)=>{setTimeout(()=>{const habits=loadHabits();const habit=habits.find(h=>h.id===habitId);if(habit){resolve(habit);}else{reject(new Error('Habit not found'));}},100);});},// Update habit\nupdateHabit:async(habitId,updates)=>{return new Promise((resolve,reject)=>{setTimeout(()=>{const habits=loadHabits();const habitIndex=habits.findIndex(h=>h.id===habitId);if(habitIndex===-1){reject(new Error('Habit not found'));return;}habits[habitIndex]={...habits[habitIndex],...updates};saveHabits(habits);resolve(habits[habitIndex]);},100);});},// Delete habit\ndeleteHabit:async habitId=>{return new Promise((resolve,reject)=>{setTimeout(()=>{const habits=loadHabits();const habitIndex=habits.findIndex(h=>h.id===habitId);if(habitIndex===-1){reject(new Error('Habit not found'));return;}habits.splice(habitIndex,1);saveHabits(habits);resolve({message:'Habit deleted successfully'});},100);});}};","map":{"version":3,"names":["STORAGE_KEY","loadHabits","stored","localStorage","getItem","JSON","parse","error","console","saveHabits","habits","setItem","stringify","generateId","Date","now","toString","Math","random","substr","api","getHabits","Promise","resolve","setTimeout","createHabit","habitData","newHabit","id","completions","createdAt","toISOString","push","completeHabit","habitId","reject","habit","find","h","Error","today","split","existingCompletion","c","date","completed","completedAt","getHabit","updateHabit","updates","habitIndex","findIndex","deleteHabit","splice","message"],"sources":["/app/streaksnap-clean/src/utils/api.js"],"sourcesContent":["// Mock data for offline functionality\n// In a real app, this would connect to your backend API\n\nconst STORAGE_KEY = 'streaksnap_habits';\n\n// Load habits from localStorage\nconst loadHabits = () => {\n  try {\n    const stored = localStorage.getItem(STORAGE_KEY);\n    return stored ? JSON.parse(stored) : [];\n  } catch (error) {\n    console.error('Failed to load habits:', error);\n    return [];\n  }\n};\n\n// Save habits to localStorage\nconst saveHabits = (habits) => {\n  try {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(habits));\n  } catch (error) {\n    console.error('Failed to save habits:', error);\n  }\n};\n\n// Generate unique ID\nconst generateId = () => {\n  return Date.now().toString(36) + Math.random().toString(36).substr(2);\n};\n\nexport const api = {\n  // Get all habits\n  getHabits: async () => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const habits = loadHabits();\n        resolve({ habits });\n      }, 100);\n    });\n  },\n\n  // Create a new habit\n  createHabit: async (habitData) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const habits = loadHabits();\n        const newHabit = {\n          id: generateId(),\n          ...habitData,\n          completions: [],\n          createdAt: new Date().toISOString(),\n        };\n        habits.push(newHabit);\n        saveHabits(habits);\n        resolve(newHabit);\n      }, 100);\n    });\n  },\n\n  // Complete a habit\n  completeHabit: async (habitId) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const habits = loadHabits();\n        const habit = habits.find(h => h.id === habitId);\n        \n        if (!habit) {\n          reject(new Error('Habit not found'));\n          return;\n        }\n\n        const today = new Date().toISOString().split('T')[0];\n        const existingCompletion = habit.completions.find(c => c.date === today);\n\n        if (!existingCompletion) {\n          habit.completions.push({\n            date: today,\n            completed: true,\n            completedAt: new Date().toISOString()\n          });\n          \n          saveHabits(habits);\n        }\n        \n        resolve(habit);\n      }, 100);\n    });\n  },\n\n  // Get habit by ID\n  getHabit: async (habitId) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const habits = loadHabits();\n        const habit = habits.find(h => h.id === habitId);\n        \n        if (habit) {\n          resolve(habit);\n        } else {\n          reject(new Error('Habit not found'));\n        }\n      }, 100);\n    });\n  },\n\n  // Update habit\n  updateHabit: async (habitId, updates) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const habits = loadHabits();\n        const habitIndex = habits.findIndex(h => h.id === habitId);\n        \n        if (habitIndex === -1) {\n          reject(new Error('Habit not found'));\n          return;\n        }\n\n        habits[habitIndex] = { ...habits[habitIndex], ...updates };\n        saveHabits(habits);\n        resolve(habits[habitIndex]);\n      }, 100);\n    });\n  },\n\n  // Delete habit\n  deleteHabit: async (habitId) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const habits = loadHabits();\n        const habitIndex = habits.findIndex(h => h.id === habitId);\n        \n        if (habitIndex === -1) {\n          reject(new Error('Habit not found'));\n          return;\n        }\n\n        habits.splice(habitIndex, 1);\n        saveHabits(habits);\n        resolve({ message: 'Habit deleted successfully' });\n      }, 100);\n    });\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}